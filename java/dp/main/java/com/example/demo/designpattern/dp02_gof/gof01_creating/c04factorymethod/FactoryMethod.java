package com.example.demo.designpattern.dp02_gof.gof01_creating.c04factorymethod;

/**
 * Created by wangshu on 2019/8/7.
 * 工厂方法（FactoryMethod）模式的定义：定义一个创建产品对象的工厂接口，
 * 将产品对象的实际创建工作推迟到具体子工厂类当中。这满足创建型模式中所要求的“创建与使用相分离”的特点。
 *
 * 简单工厂
 *     把被创建的对象称为“产品”，把创建产品的对象称为“工厂”。如果要创建的产品不多，
 *     只要一个工厂类就可以完成，这种模式叫“简单工厂模式”，它不属于 GoF 的 23 种经典设计模式，
 *     它的缺点是增加新产品时会违背“开闭原则”。
 * “工厂方法模式”是对简单工厂模式的进一步抽象化，其好处是可以使系统在不修改原来代码的情况下引进新的产品，即满足开闭原则。
 * 工厂方法的角色：
 *     抽象工厂（Abstract Factory）：提供了创建产品的接口，调用者通过它访问具体工厂的工厂方法 newProduct() 来创建产品。
 *     具体工厂（ConcreteFactory）：主要是实现抽象工厂中的抽象方法，完成具体产品的创建。
 *     抽象产品（Product）：定义了产品的规范，描述了产品的主要特性和功能。
 *     具体产品（ConcreteProduct）：实现了抽象产品角色所定义的接口，由具体工厂来创建，它同具体工厂之间一一对应。
 *  一个工厂生产一种产品
 */
public class FactoryMethod {
}
